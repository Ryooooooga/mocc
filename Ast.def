#ifndef NODE
#define NODE(name)
#endif

#ifndef NODE_END
#define NODE_END()
#endif

#ifndef NODE_MEMBER
#define NODE_MEMBER(T, x)
#endif

#ifndef NODE_MEMBER_F
#define NODE_MEMBER_F(T, x) NODE_MEMBER(T, x)
#endif

#ifndef EXPR_NODE
#define EXPR_NODE(name) NODE(name##Expr)
#endif

#ifndef STMT_NODE
#define STMT_NODE(name) NODE(name##Stmt)
#endif

#ifndef DECL_NODE
#define DECL_NODE(name) NODE(name##Decl)
#endif

// Expressions
EXPR_NODE(Integer)
    NODE_MEMBER(long long, value)
NODE_END()

// Statements
STMT_NODE(Compound)
NODE_END()

STMT_NODE(Return)
    NODE_MEMBER_F(ExprNode *, return_value)
NODE_END()

// Declarations
DECL_NODE(Function)
NODE_END()

// Misc
NODE(TranslationUnit)
NODE_END()

#undef NODE
#undef NODE_END
#undef NODE_MEMBER
#undef NODE_MEMBER_F
#undef EXPR_NODE
#undef STMT_NODE
#undef DECL_NODE
